name: sci-assistant

services:
  minio:
    image: minio/minio:${MINIO_IMAGE_TAG:-RELEASE.2025-04-08T15-41-24Z}
    restart: always
    ports:
      - "9000:9000"
      - "9002:9001"
    healthcheck:
      test: mc ready local
      interval: 10s
      timeout: 10s
      retries: 3
    command: server --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minio123}
      MINIO_VOLUMES: /data
      MINIO_PROMETHEUS_AUTH_TYPE: public
    volumes:
      - ./minio/data:/data

  minio-init-bucket:
    image: minio/mc:${MC_IMAGE_TAG:-RELEASE.2025-04-08T15-39-49Z}
    command: mb -p minio/${MINIO_BUCKET:-sci-assistant}
    environment:
      MC_HOST_minio: http://${MINIO_ACCESS_KEY:-minio}:${MINIO_SECRET_KEY:-minio123}@minio:9000
    depends_on:
      minio:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:${RABBITMQ_IMAGE_TAG:-4.1-management}
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - "5671:5672"
      - "15671:15672"
    volumes:
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ./rabbitmq/conf.d:/etc/rabbitmq/conf.d:ro
      - ./rabbitmq/data:/var/lib/rabbitmq


  mysql:
    image: mysql:${MYSQL_IMAGE_TAG:-8.4}
    restart: always
    healthcheck:
      test: mysqladmin ping -h localhost -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 10s
      timeout: 5s
      retries: 3
    command:
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-sci-1234}
      MYSQL_USER: ${MYSQL_USER:-sci-assistant}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-sci-1234}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-sci-assistant}
      TZ: Asia/Shanghai
    volumes:
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d:ro
      - ./mysql/data:/var/lib/mysql

  redis:
    image: redis:${REDIS_IMAGE_TAG:-7.4}
    restart: always
    healthcheck:
      test: |
        if [ -z "$$REDIS_PASSWORD" ]; then
          redis-cli ping | grep PONG
        else
          redis-cli -a $$REDIS_PASSWORD ping | grep PONG
        fi
      interval: 10s
      timeout: 1s
      retries: 3
    command:
      --requirepass "${REDIS_PASSWORD:-}"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}

  sci-assistant-docparsing:
    image: git.kclab.cloud/sci-agent/sci-assistant-docparsing:${DOCPARSING_IMAGE_TAG:-0.0.5}
    devices: 
      - "nvidia.com/gpu=7"
    environment:
      # MQ Configuration
      AMQP_URI: amqp://sci-assistant:sci-1234@rabbitmq:5672/%2F?heartbeat=60
      # Queue Names
      PARSING_INPUT_QUEUE: PARSINGINPUT
      PARSING_OUTPUT_QUEUE: PARSINGOUTPUT
      # Concurrency Control
      MAX_PARSING_CONCURRENCY: ${MAX_PARSING_CONCURRENCY:-1}
      # S3 Configuration
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minio}
      S3_SECRET_KEY: ${MINIO_SECRET_KEY:-minio123}
      S3_BUCKET_NAME: ${MINIO_BUCKET:-sci-assistant}
      S3_REGION_NAME: us-east-1
      S3_ADDRESSING_STYLE: auto
      # allocation size (MiB)
      PARSING_ALLOCATION_SIZE: ${PARSING_ALLOCATION_SIZE:-10000}
      PARSING_ALLOCATION_SCALE: ${PARSING_ALLOCATION_SCALE:-0.85}
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
      minio-init-bucket:
        condition: service_completed_successfully
    profiles:
      - disable_until_fixed