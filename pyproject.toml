# pyproject.toml
[project]
name = "mmdocparser"
version = "0.1.0"
description = "A document parsing service for extracting text, images, tables, and formulas"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "sanic>=23.12.0",
    "sanic-ext>=23.12.0", # 使用 redis-py 而不是 aioredis
    "aiohttp>=3.9.0",
    "aiofiles>=23.2.1",
    "dotenv>=0.9.9",
    "aiobotocore>=2.24.0",
    "redis>=6.4.0",
    "openpyxl>=3.1.5",
    "pydantic>=2.11.7",
    "docling>=2.45.0",
]

[dependency-groups]
all-dev = [
    {include-group = "dev"},
    {include-group = "lint"},
    {include-group = "security"},
    {include-group = "typing"}
]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-asyncio>=0.23.0", # 添加异步测试支持
    "pillow>=11.3.0",
]
lint = [
    "bandit>=1.8.6",
    "ruff>=0.12.7",
]
security = [
    "detect-secrets>=1.5.0",
]
typing = [
    "mypy>=1.17.1",
    "types-boto3>=1.40.0,<2.0.0",  # 为 aiobotocore 提供类型支持
]

# 添加 pytest 配置
[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["."]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.bandit]
exclude_dirs = [".venv", ".git", ".mypy_cache", "tests"]
skips = ["B101", "B601"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "tests/",
    "test_*.py",
    "examples/"
]
# 解决模块路径冲突
explicit_package_bases = true
namespace_packages = true

[tool.ruff]
target-version = "py312"
line-length = 88
exclude = [
    "tests/",
    "test_*.py",
    "examples/"
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
